#pragma once // clang-format off
#include "abc.h"
#include "cstdarg"

#define BUFSIZ 512
#define EOF (-1)
#define _IOFBF 0x0000
#define _IOLBF 0x0040
#define _IONBF 0x0004
#define L_tmpnam 260
#define SEEK_CUR 1
#define SEEK_END 2
#define SEEK_SET 0
#define FILENAME_MAX 260
#define FOPEN_MAX 20
#define TMP_MAX 2147483647

#define __ywlib_cstdio_va(x, call) \
  va_list args; __crt_va_start(args, x); \
  const int result = call;               \
  __crt_va_end(args);                    \
  return result

extern "C" {
__ywlib_begin;

using fpos_t = long long;

void __cdecl clearerr(FILE*);
int __cdecl fclose(FILE*);
int __cdecl feof(FILE*);
int __cdecl ferror(FILE*);
int __cdecl fflush(FILE*);
int __cdecl fgetc(FILE*);
int __cdecl fgetpos(FILE*, fpos_t*);
char* __cdecl fgets(char*, int, FILE*);
FILE* __cdecl fopen(const char*, const char*);
int __cdecl fputc(int, FILE*);
int __cdecl fputs(const char*, FILE*);
size_t __cdecl fread(void*, size_t, size_t, FILE*);
FILE* __cdecl freopen(const char*, const char*, FILE*);
int __cdecl fsetpos(FILE*, fpos_t const*);
int __cdecl fseek(FILE*, long, int);
long __cdecl ftell(FILE*);
size_t __cdecl fwrite(const void*, size_t, size_t, FILE*);
int __cdecl getc(FILE*);
int __cdecl getchar();
void __cdecl perror(const char*);
int __cdecl putc(int, FILE*);
int __cdecl putchar(int);
int __cdecl puts(const char*);

int __cdecl remove(const char*);
int __cdecl rename(const char*, const char*);

FILE* __cdecl tmpfile();
char* tmpnam(char*);

void __cdecl rewind(FILE*);
void __cdecl setbuf(FILE*, char*);
int __cdecl setvbuf(FILE*, char*, int, size_t);
int __cdecl ungetc(int, FILE*);

#pragma region VFSCANF

int __cdecl __stdio_common_vfscanf(unsigned __int64, FILE*, const char*, _locale_t, va_list);

inline int __cdecl vfscanf(FILE* const stream, const char* fmt, va_list args) {
  return __stdio_common_vfscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, stream, fmt, nullptr, args);
}

inline int __cdecl vscanf(const char* fmt, va_list args) { return vfscanf(stdin, fmt, args); }

inline int __cdecl fscanf(FILE* const stream, const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (vfscanf(stream, fmt, args)));
}

inline int __cdecl scanf(const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (vfscanf(stdin, fmt, args)));
}

#pragma endregion

#pragma region VSSCANF

int __cdecl __stdio_common_vsscanf(
  unsigned __int64, const char*, size_t, const char*, _locale_t, va_list);

inline int __cdecl vsscanf(const char* buffer, const char* fmt, va_list args) {
  return __stdio_common_vsscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, buffer, (size_t)-1, fmt, nullptr, args);
}

inline int __cdecl sscanf(const char* buffer, const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (vsscanf(buffer, fmt, args)));
}

#pragma endregion

#pragma region VFPRINTF

int __cdecl __stdio_common_vfprintf(unsigned __int64, FILE*, const char*, _locale_t, va_list);

inline int __cdecl vfprintf(FILE* const stream, const char* fmt, va_list args) {
  return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, stream, fmt, nullptr, args);
}

inline int __cdecl vprintf(const char* fmt, va_list args) {
  return vfprintf(stdout, fmt, args);
}

inline int __cdecl fprintf(FILE* const stream, const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (vfprintf(stream, fmt, args)));
}

inline int __cdecl printf(const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (vfprintf(stdout, fmt, args)));
}

#pragma endregion

#pragma region VSPRINTF

int __cdecl __stdio_common_vsprintf(unsigned __int64, char*, size_t, const char*, _locale_t, va_list);

inline int __cdecl vsnprintf(char* buffer, size_t count, const char* fmt, va_list args) {
  const auto options = _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR;
  const int result = __stdio_common_vsprintf(options, buffer, count, fmt, NULL, args);
  return result < 0 ? -1 : result;
}

inline int __cdecl vsprintf(char* buffer, const char* fmt, va_list args) {
  const auto options = _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION;
  const int result = __stdio_common_vsprintf(options, buffer, (size_t)-1, fmt, nullptr, args);
  return result < 0 ? -1 : result;
}

inline int __cdecl snprintf(char* buffer, size_t count, const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (vsnprintf(buffer, count, fmt, args)));
}

inline int __cdecl sprintf(char* buffer, const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (vsprintf(buffer, fmt, args)));
}

#pragma endregion

__ywlib_end;
}
__ywlib_export namespace std {
using __ywlib_global clearerr;
using __ywlib_global fclose;
using __ywlib_global feof;
using __ywlib_global ferror;
using __ywlib_global fflush;
using __ywlib_global fgetc;
using __ywlib_global fgetpos;
using __ywlib_global fgets;
using __ywlib_global fopen;
using __ywlib_global fputc;
using __ywlib_global fputs;
using __ywlib_global fread;
using __ywlib_global freopen;
using __ywlib_global fsetpos;
using __ywlib_global fseek;
using __ywlib_global ftell;
using __ywlib_global fwrite;
using __ywlib_global getc;
using __ywlib_global getchar;
using __ywlib_global perror;
using __ywlib_global putc;
using __ywlib_global putchar;
using __ywlib_global puts;
using __ywlib_global remove;
using __ywlib_global rename;
using __ywlib_global rewind;
using __ywlib_global setbuf;
using __ywlib_global setvbuf;
using __ywlib_global tmpfile;
using __ywlib_global tmpnam;
using __ywlib_global ungetc;

using __ywlib_global vfscanf;
using __ywlib_global vscanf;
using __ywlib_global fscanf;
using __ywlib_global scanf;

using __ywlib_global vsscanf;
using __ywlib_global sscanf;

using __ywlib_global vfprintf;
using __ywlib_global vprintf;
using __ywlib_global fprintf;
using __ywlib_global printf;

using __ywlib_global vsnprintf;
using __ywlib_global vsprintf;
using __ywlib_global snprintf;
using __ywlib_global sprintf;
}

////////////////////////////////////////////////////////////////////////////////
// for <string>
extern "C" {
inline int __cdecl _scprintf(const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (__ywlib_global vsnprintf(nullptr, 0, fmt, args)));
}

int __cdecl __stdio_common_vsprintf_s(unsigned __int64, char*, size_t, const char*, __ywlib_global _locale_t, va_list);

inline int __cdecl vsprintf_s(char* buffer, size_t count, const char* fmt, va_list args) {
  const auto options = _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS;
  const int result = __stdio_common_vsprintf_s(options, buffer, count, fmt, nullptr, args);
  return result < 0 ? -1 : result;
}

inline int __cdecl sprintf_s(char* buffer, size_t count, const char* fmt, ...) {
  __ywlib_cstdio_va(fmt, (vsprintf_s(buffer, count, fmt, args)));
}
}

////////////////////////////////////////////////////////////////////////////////
// for <fstream>

extern "C" {
int __cdecl _fseeki64(FILE*, __int64, int);
int __cdecl _get_stream_buffer_pointers(FILE*, char***, char***, int**);
}
