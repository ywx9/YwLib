#pragma once // clang-format off
#include "abc.h"

#ifndef NULL
#define NULL 0
#endif

extern "C" {
__ywlib_begin;

void* __cdecl memcpy(void*, const void*, size_t);
void* __cdecl memmove(void*, const void*, size_t);
char* __cdecl strcpy(char*, const char*);
char* __cdecl strncpy(char*, const char*, size_t);
char* __cdecl strcat(char*, const char*);
char* __cdecl strncat(char*, const char*, size_t);
int __cdecl memcmp(const void*, const void*, size_t);
int __cdecl strcmp(const char*, const char*);
int __cdecl strcoll(const char*, const char*);
int __cdecl strncmp(const char*, const char*, size_t);
size_t __cdecl strxfrm(char*, const char*, size_t);
const void* __cdecl memchr(const void*, int, size_t);
const char* __cdecl strchr(const char*, int);
size_t __cdecl strcspn(const char*, const char*);
const char* __cdecl strpbrk(const char*, const char*);
const char* __cdecl strrchr(const char*, int);
size_t __cdecl strspn(const char*, const char*);
const char* __cdecl strstr(const char*, const char*);
char* __cdecl strtok(char*, const char*);
void* __cdecl memset(void*, int, size_t);
char* __cdecl strerror(int);
size_t __cdecl strlen(const char*);

__ywlib_end;
}
#if not __ywlib_is_imported
__ywlib_export namespace std {

using __ywlib_global memcpy;
using __ywlib_global memmove;
using __ywlib_global strcpy;
using __ywlib_global strncpy;
using __ywlib_global strcat;
using __ywlib_global strncat;
using __ywlib_global memcmp;
using __ywlib_global strcmp;
using __ywlib_global strcoll;
using __ywlib_global strncmp;
using __ywlib_global strxfrm;
using __ywlib_global memchr;
using __ywlib_global strchr;
using __ywlib_global strcspn;
using __ywlib_global strpbrk;
using __ywlib_global strrchr;
using __ywlib_global strspn;
using __ywlib_global strstr;
using __ywlib_global strtok;
using __ywlib_global memset;
using __ywlib_global strerror;
using __ywlib_global strlen;

inline void* memchr(void* s, int c, size_t n) noexcept {
  return const_cast<void*>(memchr(const_cast<const void*>(s), c, n));
}
inline char* strchr(char* s, int c) noexcept {
  return const_cast<char*>(strchr(const_cast<const char*>(s), c));
}
inline char* strpbrk(char* s, const char* accept) noexcept {
  return const_cast<char*>(strpbrk(const_cast<const char*>(s), accept));
}
inline char* strrchr(char* s, int c) noexcept {
  return const_cast<char*>(strrchr(const_cast<const char*>(s), c));
}
inline char* strstr(char* s, const char* substr) noexcept {
  return const_cast<char*>(strstr(const_cast<const char*>(s), substr));
}
}
#endif
