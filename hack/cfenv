#pragma once // clang-format off
#include "abc.h"

#define FE_TONEAREST 0x000
#define FE_DOWNWARD 0x100
#define FE_UPWARD 0x200
#define FE_TOWARDZERO 0x300
#define FE_ROUND_MASK 0x300

#define FE_INEXACT 0x01
#define FE_UNDERFLOW 0x02
#define FE_OVERFLOW 0x04
#define FE_DIVBYZERO 0x08
#define FE_INVALID 0x10
#define FE_ALL_EXCEPT 0x1f

#define FE_DFL_ENV (&__ywstd_cfunc _Fenv1)

__ywstd_cfunc_begin_poqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoqpoq

using fexcept_t = unsigned long;

struct fenv_t { unsigned long _Fe_ctl, _Fe_stat; };
__ywstd_export __declspec(selectany) inline const fenv_t _Fenv1 = {0x3f00003f, 0};

int __cdecl fegetround();
int __cdecl fesetround(int);
int __cdecl fegetenv(fenv_t*);
int __cdecl fesetenv(const fenv_t*);
int __cdecl feclearexcept(int);
int __cdecl feholdexcept(fenv_t*);
int __cdecl fetestexcept(int);
int __cdecl fegetexceptflag(fexcept_t*, int);
int __cdecl fesetexceptflag(const fexcept_t*, int);

#pragma optimize("", off)
inline int __cdecl feraiseexcept(int e) {
  static struct { int val; double num; double den; } const table[] = {
    {FE_INVALID, 0.0, 0.0}, {FE_DIVBYZERO, 1.0, 0.0},
    {FE_OVERFLOW, 1e+300, 1e-300}, {FE_UNDERFLOW, 1e-300, 1e+300}, {FE_INEXACT, 2.0, 3.0}};
  if ((e &= FE_ALL_EXCEPT) == 0) return 0;
  double a = 0.0;
  (void)a;
  for (size_t i = 0; i < 5; ++i)
    if ((e & table[i].val) != 0) a = table[i].num / table[i].den;
  return 0;
}
#pragma optimize("", on)

inline int __cdecl feupdateenv(const fenv_t* env) {
  if (fesetenv(env) != 0) return 1;
  else if (int e = fetestexcept(FE_ALL_EXCEPT); feraiseexcept(e) != 0) return 1;
  else return 0;
}

__ywstd_cfunc_end___bodbodbodbodbodbodbodbodbodbodbodbodbodbodbodbodbodbodbodbod

#if not __ywstd_is_imported
__ywstd_export namespace std {

using __ywstd_cfunc fenv_t;
using __ywstd_cfunc fexcept_t;

using __ywstd_cfunc fegetround;
using __ywstd_cfunc fesetround;
using __ywstd_cfunc fegetenv;
using __ywstd_cfunc fesetenv;
using __ywstd_cfunc feclearexcept;
using __ywstd_cfunc feholdexcept;
using __ywstd_cfunc fetestexcept;
using __ywstd_cfunc fegetexceptflag;
using __ywstd_cfunc fesetexceptflag;
using __ywstd_cfunc feraiseexcept;
using __ywstd_cfunc feupdateenv;

}
#endif
