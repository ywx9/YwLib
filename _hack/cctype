/// \file cctype
/// \copyright (c) 2025 ywx9.com

#pragma once
#include "abc.h"

#if __ywstd_is_exported
extern "C" {
int __cdecl isalnum(int);
int __cdecl isalpha(int);
int __cdecl isblank(int);
int __cdecl iscntrl(int);
int __cdecl isdigit(int);
int __cdecl isgraph(int);
int __cdecl islower(int);
int __cdecl isprint(int);
int __cdecl ispunct(int);
int __cdecl isspace(int);
int __cdecl isupper(int);
int __cdecl isxdigit(int);
int __cdecl tolower(int);
int __cdecl toupper(int);
}
#endif

#if !__ywstd_is_imported
__ywstd_export namespace std {

///  checks if a character is alphanumeric
inline int __cdecl isalnum(int c) { return __ywstd_switch(::isalnum(c), {}); }

/// checks if a character is alphabetic
inline int __cdecl isalpha(int c) { return __ywstd_switch(::isalpha(c), {}); }

/// checks if a character is lowercase
inline int __cdecl islower(int c) { return __ywstd_switch(::islower(c), {}); }

/// checks if a character is uppercase
inline int __cdecl isupper(int c) { return __ywstd_switch(::isupper(c), {}); }

/// checks if a character is a digit
inline int __cdecl isdigit(int c) { return __ywstd_switch(::isdigit(c), {}); }

/// checks if a character is a hexadecimal character
inline int __cdecl isxdigit(int c) { return __ywstd_switch(::isxdigit(c), {}); }

/// checks if a character is a control character
inline int __cdecl iscntrl(int c) { return __ywstd_switch(::iscntrl(c), {}); }

/// checks if a character is a graphical character
inline int __cdecl isgraph(int c) { return __ywstd_switch(::isgraph(c), {}); }

/// checks if a character is a space character
inline int __cdecl isspace(int c) { return __ywstd_switch(::isspace(c), {}); }

/// checks if a character is a blank character
inline int __cdecl isblank(int c) { return __ywstd_switch(::isblank(c), {}); }

/// checks if a character is a printing character
inline int __cdecl isprint(int c) { return __ywstd_switch(::isprint(c), {}); }

/// checks if a character is a punctuation character
inline int __cdecl ispunct(int c) { return __ywstd_switch(::ispunct(c), {}); }

/// converts a character to lowercase
inline int __cdecl tolower(int c) { return __ywstd_switch(::tolower(c), {}); }

/// converts a character to uppercase
inline int __cdecl toupper(int c) { return __ywstd_switch(::toupper(c), {}); }

}
#endif
