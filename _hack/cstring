/// \file cstring
/// \copyright (c) 2025 ywx9.com

// clang-format off
#pragma once
#include "abc.h"

////////////////////////////////////////////////////////////////////////////////
// internal definitions

#if __ywstd_is_exported
extern "C" {
void* __cdecl memcpy(void*, const void*, size_t);
void* __cdecl memmove(void*, const void*, size_t);
char* __cdecl strcpy(char*, const char*);
char* __cdecl strncpy(char*, const char*, size_t);
char* __cdecl strcat(char*, const char*);
int __cdecl memcmp(const void*, const void*, size_t);
int __cdecl strcmp(const char*, const char*);
int __cdecl strcoll(const char*, const char*);
int __cdecl strncmp(const char*, const char*, size_t);
size_t __cdecl strxfrm(char*, const char*, size_t);
const void* __cdecl memchr(const void*, int, size_t);
const char* __cdecl strchr(const char*, int);
size_t __cdecl strcspn(const char*, const char*);
const char* __cdecl strpbrk(const char*, const char*);
const char* __cdecl strrchr(const char*, int);
size_t __cdecl strspn(const char*, const char*);
const char* __cdecl strstr(const char*, const char*);
char* __cdecl strtok(char*, const char*);
void* __cdecl memset(void*, int, size_t);
char* __cdecl strerror(int);
size_t __cdecl strlen(const char*);
}
#endif

////////////////////////////////////////////////////////////////////////////////
// public definitions

#if !__ywstd_is_imported
__ywstd_export namespace std {

using size_t = decltype(sizeof(0));

inline void* __cdecl memcpy(void* dst, const void* src, size_t n) {
  return __ywstd_switch(::memcpy(dst, src, n), {});
}

inline void* __cdecl memmove(void* dst, const void* src, size_t n) {
  return __ywstd_switch(::memmove(dst, src, n), {});
}

inline char* __cdecl strcpy(char* dst, const char* src) {
  return __ywstd_switch(::strcpy(dst, src), {});
}

inline char* __cdecl strncpy(char* dst, const char* src, size_t n) {
  return __ywstd_switch(::strncpy(dst, src, n), {});
}

inline char* __cdecl strcat(char* dst, const char* src) {
  return __ywstd_switch(::strcat(dst, src), {});
}

inline int __cdecl memcmp(const void* s1, const void* s2, size_t n) {
  return __ywstd_switch(::memcmp(s1, s2, n), {});
}

inline int __cdecl strcmp(const char* s1, const char* s2) {
  return __ywstd_switch(::strcmp(s1, s2), {});
}

inline int __cdecl strcoll(const char* s1, const char* s2) {
  return __ywstd_switch(::strcoll(s1, s2), {});
}

inline int __cdecl strncmp(const char* s1, const char* s2, size_t n) {
  return __ywstd_switch(::strncmp(s1, s2, n), {});
}

inline size_t __cdecl strxfrm(char* dst, const char* src, size_t n) {
  return __ywstd_switch(::strxfrm(dst, src, n), {});
}

inline const void* __cdecl memchr(const void* s, int c, size_t n) {
  return __ywstd_switch(::memchr(s, c, n), {});
}

inline const char* __cdecl strchr(const char* s, int c) {
  return __ywstd_switch(::strchr(s, c), {});
}

inline size_t __cdecl strcspn(const char* s1, const char* s2) {
  return __ywstd_switch(::strcspn(s1, s2), {});
}

inline const char* __cdecl strpbrk(const char* s1, const char* s2) {
  return __ywstd_switch(::strpbrk(s1, s2), {});
}

inline const char* __cdecl strrchr(const char* s, int c) {
  return __ywstd_switch(::strrchr(s, c), {});
}

inline size_t __cdecl strspn(const char* s1, const char* s2) {
  return __ywstd_switch(::strspn(s1, s2), {});
}

inline const char* __cdecl strstr(const char* s1, const char* s2) {
  return __ywstd_switch(::strstr(s1, s2), {});
}

inline char* __cdecl strtok(char* s, const char* delim) {
  return __ywstd_switch(::strtok(s, delim), {});
}

inline void* __cdecl memset(void* s, int c, size_t n) {
  return __ywstd_switch(::memset(s, c, n), {});
}

inline char* __cdecl strerror(int errnum) {
  return __ywstd_switch(::strerror(errnum), {});
}

inline size_t __cdecl strlen(const char* s) {
  return __ywstd_switch(::strlen(s), {});
}

// non const versions

inline void* __cdecl memchr(void* s, int c, size_t n) {
  return __ywstd_switch(const_cast<void*>(::memchr(const_cast<const void*>(s), c, n)), {});
}

inline char* __cdecl strchr(char* s, int c) {
  return __ywstd_switch(const_cast<char*>(::strchr(const_cast<const char*>(s), c)), {});
}

inline char* __cdecl strpbrk(char* s1, const char* s2) {
  return __ywstd_switch(const_cast<char*>(::strpbrk(const_cast<const char*>(s1), s2)), {});
}

inline char* __cdecl strrchr(char* s, int c) {
  return __ywstd_switch(const_cast<char*>(::strrchr(const_cast<const char*>(s), c)), {});
}

inline char* __cdecl strstr(char* s1, const char* s2) {
  return __ywstd_switch(const_cast<char*>(::strstr(const_cast<const char*>(s1), s2)), {});
}
}
#endif
